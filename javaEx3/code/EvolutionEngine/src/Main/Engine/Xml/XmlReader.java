package Main.Engine.Xml;

import Main.Engine.Xml.AutoGenerated.ETTDescriptor;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.Unmarshaller;
import java.io.File;
import java.io.InputStream;

public class XmlReader {
    public static ETTDescriptor createETTDescriptorFromXmlFile(String XMLPath)
    {
        XmlChecker.isLegalFile(XMLPath);

        File xmlFile = new File(XMLPath);
        ETTDescriptor descriptor = null;
        try{
            JAXBContext jaxbContext = JAXBContext.newInstance(ETTDescriptor.class);
            Unmarshaller jaxbUnmarshaller = jaxbContext.createUnmarshaller();
            descriptor = (ETTDescriptor) jaxbUnmarshaller.unmarshal(xmlFile);

            /*if(descriptor.getETTEvolutionEngine().getETTSelection().getETTElitism() == null)
                descriptor.getETTEvolutionEngine().getETTSelection().setETTElitism(0);*/
        }
        catch(Exception e)
        {
            return null;
        }

        XmlChecker.CheckDescriptor(descriptor);

        return descriptor;
    }

    public static ETTDescriptor createETTDescriptorFromInputStream(InputStream inputStream, String filename)
    {
        if(!filename.endsWith(".xml"))
            throw new RuntimeException("The file Path provided is not of a Xml file");

        ETTDescriptor descriptor = null;
        try{
            JAXBContext jaxbContext = JAXBContext.newInstance(ETTDescriptor.class);
            Unmarshaller jaxbUnmarshaller = jaxbContext.createUnmarshaller();
            descriptor = (ETTDescriptor) jaxbUnmarshaller.unmarshal(inputStream);
        }
        catch(Exception e)
        {
            return null;
        }

        XmlChecker.CheckDescriptor(descriptor);

        return descriptor;
    }
}
