package Servlets;

import InformationHolders.AlgorithmInformationWebVersion;
import InformationHolders.FileInfo;
import InformationHolders.User;
import Main.Engine.Xml.AutoGenerated.ETTDescriptor;
import Managers.UploadedFilesManager;
import Managers.UserManager;
import Utils.AlgorithmWrapper;
import Utils.ServletUtils;
import com.google.gson.Gson;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.io.PrintWriter;

@WebServlet(name = "algorithmWrapperServlet", urlPatterns = {"/AlgorithmView/algorithmWrapperServlet"})
public class AlgorithmWrapperServlet extends HttpServlet {
    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {

        int algorithmId = Integer.parseInt(request.getParameter("id"));
        UserManager userManager = ServletUtils.getUserManager(getServletContext());
        UploadedFilesManager uploadedFilesManager = ServletUtils.getUploadedFilesManager(getServletContext());

        User currentUser = userManager.getCurrentUser(request.getSession(false));

        FileInfo thisFileInfo = uploadedFilesManager.getFileInfoByID(algorithmId);

        ETTDescriptor descriptorOfAlgorithm = thisFileInfo.getDescriptor();

        if(!currentUser.isWorkingOnAlgorithm(algorithmId))
            thisFileInfo.increaseWorkingUsers();

        AlgorithmWrapper algorithmWrapper = currentUser.getAlgorithmOrCreate(algorithmId, descriptorOfAlgorithm);

        AlgorithmInformationWebVersion algorithmInformation = algorithmWrapper.getAlgorithmInformation();

        int currentMaxFitness = thisFileInfo.getMaxFitness();
        int fitnessFromInformation = (int) Math.floor(algorithmInformation.getFitness());
        if(currentMaxFitness < fitnessFromInformation)
            thisFileInfo.setMaxFitness(fitnessFromInformation);

        response.setContentType("application/json");

        try (PrintWriter out = response.getWriter()) {
            Gson gson = new Gson();
            String json = gson.toJson(algorithmInformation);
            out.println(json);
            out.flush();
        }
    }
}
