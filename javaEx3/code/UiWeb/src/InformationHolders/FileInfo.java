package InformationHolders;

import Main.Engine.Xml.AutoGenerated.ETTDescriptor;

import java.util.Objects;

public class FileInfo {
    private static int idGenerator = 0;

    private final Integer id;
    private final String uploaderName;
    private final ETTDescriptor descriptor;
    private final Integer D;
    private final Integer H;
    private final Integer C;
    private final Integer T;
    private final Integer S;
    private Integer numberOfUsersWorking;
    private final Integer hardRules;
    private final Integer softRules;
    private Integer maxFitness;

    public FileInfo(String uploaderName, ETTDescriptor descriptor) {
        this.id = getAndIncreaseIdGeneratorSafe();
        this.uploaderName = uploaderName;
        this.descriptor = descriptor;
        this.D = descriptor.getETTTimeTable().getDays();
        this.H = descriptor.getETTTimeTable().getHours();
        this.C = descriptor.getETTTimeTable().getETTClasses().getETTClass().size();
        this.T = descriptor.getETTTimeTable().getETTTeachers().getETTTeacher().size();
        this.S = descriptor.getETTTimeTable().getETTSubjects().getETTSubject().size();
        this.numberOfUsersWorking = 0;
        this.hardRules = (int) descriptor.getETTTimeTable().getETTRules().getETTRule().stream()
                .filter(rule -> rule.getType().equals("Hard"))
                .count();
        this.softRules = (int) descriptor.getETTTimeTable().getETTRules().getETTRule().stream()
                .filter(rule -> rule.getType().equals("Soft"))
                .count();
        this.maxFitness = 0;
    }

    private synchronized Integer getAndIncreaseIdGeneratorSafe()
    {
        idGenerator += 1;
        return idGenerator;
    }

    public Integer getId() {
        return id;
    }

    public String getUploaderName() {
        return uploaderName;
    }

    public ETTDescriptor getDescriptor() {
        return descriptor;
    }

    public Integer getD() {
        return D;
    }

    public Integer getH() {
        return H;
    }

    public Integer getC() {
        return C;
    }

    public Integer getT() {
        return T;
    }

    public Integer getS() {
        return S;
    }

    public synchronized Integer getNumberOfUsersWorking() {
        return numberOfUsersWorking;
    }

    public synchronized void setNumberOfUsersWorking(Integer numberOfUsersWorking) {
        this.numberOfUsersWorking = numberOfUsersWorking;
    }

    public Integer getHardRules() {
        return hardRules;
    }

    public Integer getSoftRules() {
        return softRules;
    }

    public synchronized Integer getMaxFitness() {
        return maxFitness;
    }

    public synchronized void setMaxFitness(Integer maxFitness) {
        this.maxFitness = maxFitness;
    }

    public synchronized void increaseWorkingUsers()
    {
        numberOfUsersWorking += 1;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        FileInfo that = (FileInfo) o;
        return Objects.equals(uploaderName, that.uploaderName) && Objects.equals(descriptor, that.descriptor);
    }

    @Override
    public int hashCode() {
        return Objects.hash(uploaderName, descriptor);
    }

    @Override
    public String toString() {
        return "UploadedFileInfo{" +
                "id=" + id +
                ", uploaderName='" + uploaderName + '\'' +
                ", descriptor=" + descriptor +
                ", numberOfUsersWorking=" + numberOfUsersWorking +
                '}';
    }
}
